---
apiVersion: trino.stackable.tech/v1alpha1
kind: TrinoCatalog
metadata:
  name: hivehdfs
  labels:
    trino: trino
spec:
  connector:
    hive:
      metastore:
        configMap: hive-hdfs
      hdfs:
        configMap: hdfs
---
apiVersion: trino.stackable.tech/v1alpha1
kind: TrinoCatalog
metadata:
  name: hives3
  labels:
    trino: trino
spec:
  connector:
    hive:
      metastore:
        configMap: hive-s3
      s3:
        reference: minio
  configOverrides:
    hive.iceberg-catalog-name: iceberg
---
apiVersion: trino.stackable.tech/v1alpha1
kind: TrinoCatalog
metadata:
  name: iceberg
  labels:
    trino: trino
spec:
  connector:
    iceberg:
      metastore:
        configMap: hive-s3
      s3:
        reference: minio
  configOverrides:
    iceberg.hive-catalog-name: hives3
---
apiVersion: trino.stackable.tech/v1alpha1
kind: TrinoCatalog
metadata:
  name: tpcds
  labels:
    trino: trino
spec:
  connector:
    tpcds: {}
---
apiVersion: trino.stackable.tech/v1alpha1
kind: TrinoCluster
metadata:
  name: trino
spec:
  image:
    productVersion: "440"
  clusterConfig:
    authorization:
      opa:
        configMapName: opa
        package: trino
    catalogLabelSelector:
      matchLabels:
        trino: trino
    listenerClass: external-unstable
  coordinators:
    roleGroups:
      default:
        replicas: 1
  workers:
    roleGroups:
      default:
        replicas: 1
---
apiVersion: opa.stackable.tech/v1alpha1
kind: OpaCluster
metadata:
  name: opa
spec:
  image:
    productVersion: 0.51.0
  servers:
    roleGroups:
      default:
        replicas: 1
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: trino-opa-bundle
  labels:
    opa.stackable.tech/bundle: "trino"
data:
  trino.rego: |
    package trino

    import future.keywords.in

    default allow = false

    # Allow non-batched access
    allow {
      is_admin
    }
    # Allow batched access
    extended[i] {
      some i
      input.action.filterResources[i]
      is_admin
    }
    # Corner case: filtering columns is done with a single table item, and many columns inside
    extended[i] {
      some i
      input.action.operation == "FilterColumns"
      count(input.action.filterResources) == 1
      input.action.filterResources[0].table.columns[i]
      is_admin
    }

    is_admin() {
      input.context.identity.user == "admin"
    }
