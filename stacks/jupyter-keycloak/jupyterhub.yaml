---
releaseName: jupyterhub
name: jupyterhub
repo:
  name: jupyterhub
  url: https://jupyterhub.github.io/helm-chart/
version: 4.0.0
options:
  hub:
    config:
      GenericOAuthenticator:
        client_id: jupyterhub
        client_secret: jupyterhubjupyterhub
        oauth_callback_url: http://proxy-public.default.svc.cluster.local:31095/hub/oauth_callback
        authorize_url: https://keycloak.default.svc.cluster.local/realms/jupyterhub/protocol/openid-connect/auth # see ingress
        token_url: https://keycloak.default.svc.cluster.local:8443/realms/jupyterhub/protocol/openid-connect/token
        userdata_url: https://keycloak.default.svc.cluster.local:8443/realms/jupyterhub/protocol/openid-connect/userinfo # needed?
        username_claim: preferred_username
        tls_ca_path: /etc/ssl/certs/keycloak-ca.crt
        scope:
          - openid
          #- profile
          #- email
        #ca_certs: None
        enable_pkce: False
      JupyterHub:
        authenticator_class: generic-oauth
        log_level: 'DEBUG'
      debug: 'True'
    extraEnv:
      # Not sure if all of these are necessary
      CURL_SSL_BACKEND: openssl # https://stackoverflow.com/a/76605700
      PYCURL_SSL_LIBRARY: openssl
      CURLOPT_SSL_VERIFYPEER: "false"
      CURLOPT_SSL_VERIFYHOST: "false"
      OAUTH2_TLS_VERIFY: "false"
      CACERT: /etc/ssl/certs/keycloak-ca.crt
      CERT: /etc/ssl/certs/keycloak-ca.crt
      CURLOPT_CAINFO: /etc/ssl/certs/keycloak-ca.crt
      # necessary
      SSL_CERT_FILE: /etc/ssl/certs/ca-certificates.crt
      REQUESTS_CA_BUNDLE: /etc/ssl/certs/ca-certificates.crt
      CURL_CA_BUNDLE: /etc/ssl/certs/ca-certificates.crt
    extraVolumes:
        - ephemeral:
            volumeClaimTemplate:
              metadata:
                annotations:
                  secrets.stackable.tech/class: keycloak-tls-default
                  secrets.stackable.tech/format: tls-pem
                  secrets.stackable.tech/scope: service=keycloak,service=keycloak-external
              spec:
                accessModes:
                - ReadWriteOnce
                resources:
                  requests:
                    storage: "1"
                storageClassName: secrets.stackable.tech
                volumeMode: Filesystem
          name: keycloak-tls
    extraVolumeMounts:
      - name: keycloak-tls
        mountPath: /etc/ssl/certs/keycloak-ca.crt
        subPath: ca.crt
      - name: keycloak-tls
        mountPath: /usr/local/lib/python3.12/site-packages/certifi/cacert.pem
        subPath: ca.crt
    service:
      type: NodePort
    networkPolicy:
      enabled: true
      egress:
        - to:
          - podSelector:
              matchLabels:
                app: keycloak
          ports:
          - protocol: TCP
            port: 8443
  proxy:
    service:
      type: NodePort
      nodePorts:
        http: 31095
    # chp:
    #   networkPolicy:
    #     enabled: true
    # traefik:
    #   networkPolicy:
    #     enabled: true
  rbac:
    create: true
  prePuller:
    hook:
      enabled: false
    continuous:
      enabled: false
  scheduling:
    userScheduler:
      enabled: false
  singleuser:
    cmd: null
    #image:
    #  name: jupyter/pyspark-notebook
    #  tag: python-3.11
    #serviceAccountName: hub
    networkPolicy:
      enabled: false
    extraLabels:
      stackable.tech/vendor: Stackable
    storage:
      extraVolumes:
        - name: notebook
          emptyDir:
            sizeLimit: 500Mi
      extraVolumeMounts:
        - name: notebook
          mountPath: /home/jovyan/notebook
