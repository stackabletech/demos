apiVersion: opentelemetry.io/v1alpha1
kind: OpenTelemetryCollector
metadata:
  name: otel-collector-grpc
spec:
  mode: sidecar
  # See: https://github.com/open-telemetry/opentelemetry-collector-releases/pkgs/container/opentelemetry-collector-releases%2Fopentelemetry-collector-contrib/versions?filters%5Bversion_type%5D=tagged
  # Using the contrib image so we get all of the useful plugins
  image: ghcr.io/open-telemetry/opentelemetry-collector-releases/opentelemetry-collector-contrib:0.97.0
  config: |
    receivers:
      otlp/insecure:
        protocols:
          grpc:
            # we don't want the sidecar accessible from outside the pod since TLS is not enabled on the receiver.
            endpoint: 127.0.0.1:4317
    exporters:
      debug:
        # verbosity: detailed
      otlp/jaeger-insecure:
        endpoint: jaeger-collector:4317
        tls:
          insecure: true
      otlp/tempo:
        endpoint: tempo.default.svc.cluster.local:4317
        tls:
          ca_file: /certs/ca.crt
      loki:
        endpoint: https://loki.default.svc.cluster.local:3100/loki/api/v1/push
        tls:
          ca_file: /certs/ca.crt
      #     auth:
      #       authenticator: basicauth/loki
    extensions:
      # basicauth/loki:
      #   client_auth:
      #     username: loki
      #     password: {{ loki }}
    processors:
      memory_limiter:
        check_interval: 1s
        limit_percentage: 50
        spike_limit_percentage: 30
      batch/every-10-seconds:
        timeout: 10s
      # extract key=value pairs from OTEL_RESOURCE_ATTRIBUTES
      resourcedetection/env:
        detectors: ["env"]
        timeout: 2s
        override: false
      ## extract EKS specific information from the AWS metadata API
      # resourcedetection/eks:
      #   detectors: ["eks"]
      #   timeout: 2s
      #   override: false
      # resourcedetection/ec2:
      #   detectors: ["ec2"]
      #   ec2:
      #     # A list of regex's to match tag keys to add as resource attributes can be specified
      #     tags:
      #     - ^Name$
      #     - ^karpenter\.sh\/provisioner-name$
      #
      # See: https://github.com/open-telemetry/opentelemetry-collector-contrib/blob/main/exporter/lokiexporter/README.md#configuration-via-attribute-hints
      attributes/logs:
        actions:
        - action: insert
          key: loki.attribute.labels
          value: event.domain, event.name
      resource/logs:
        attributes:
        - action: insert
          key: loki.format
          value: logfmt
        - action: insert
          key: loki.resource.labels
          value: service.name, service.namespace
    service:
      # extensions: [basicauth/loki]
      pipelines:
        traces:
          receivers: [otlp/insecure]
          processors:
          - memory_limiter
          - batch/every-10-seconds
          - resourcedetection/env
          exporters:
          - otlp/jaeger-insecure
          - otlp/tempo
          # - debug
        logs:
          receivers: [otlp/insecure]
          processors:
          - memory_limiter
          - batch/every-10-seconds
          - resourcedetection/env
          - resource/logs
          - attributes/logs
          exporters: 
          - loki
          # - debug
      telemetry:
        logs:
          level: DEBUG # set the log level of the opentelemetry-collector application
  resources:
    limits:
      cpu: 500m
      memory: 256Mi
    requests:
      cpu: 250m
      memory: 64Mi
  volumeMounts:
    # Use the certificate generated by the secret-operator
    - name: tls
      mountPath: /certs
  volumes:
    - name: tls
      ephemeral:
        volumeClaimTemplate:
          metadata:
            annotations:
              secrets.stackable.tech/class: tls
              secrets.stackable.tech/scope: pod
          spec:
            storageClassName: secrets.stackable.tech
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 1
