---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jupyterlab
  labels:
    app: jupyterlab
    stackable.tech/vendor: Stackable
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jupyterlab
      stackable.tech/vendor: Stackable
  template:
    metadata:
      labels:
        app: jupyterlab
        stackable.tech/vendor: Stackable
    spec:
      serviceAccountName: default
      containers:
        - name: jupyterlab
          image: oci.stackable.tech/stackable/spark-connect-client:3.5.5-stackable0.0.0-dev
          imagePullPolicy: IfNotPresent
          command:
            - bash
          args:
            - -c
            - /stackable/.local/bin/jupyter lab --ServerApp.token='{{ jupyterLabToken }}' --ServerApp.port=8080 --no-browser --notebook-dir /notebook
          env:
            - name: JUPYTER_PORT
              value: "8080"
          ports:
            - name: http
              containerPort: 8080
          volumeMounts:
            - mountPath: /notebook
              name: notebook
      initContainers:
        - name: download-notebook
          image: oci.stackable.tech/stackable/spark-connect-client:3.5.5-stackable0.0.0-dev
          command: ['sh', '-c', 'curl https://raw.githubusercontent.com/stackabletech/demos/main/stacks/jupyterhub-pyspark-hdfs/notebook.ipynb -o /notebook/notebook.ipynb']
          volumeMounts:
            - mountPath: /notebook
              name: notebook
      volumes:
        - name: notebook
          emptyDir:
            sizeLimit: 500Mi
---
apiVersion: v1
kind: Service
metadata:
  name: jupyterlab
  labels:
    app: jupyterlab
    stackable.tech/vendor: Stackable
spec:
  type: NodePort
  selector:
    app: jupyterlab
    stackable.tech/vendor: Stackable
  ports:
    - name: http
      port: 8080
      targetPort: 8080
